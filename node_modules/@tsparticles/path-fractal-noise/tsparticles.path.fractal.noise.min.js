/*! For license information please see tsparticles.path.fractal.noise.min.js.LICENSE.txt */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("@tsparticles/engine"),require("@tsparticles/fractal-noise"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine","@tsparticles/fractal-noise"],e);else{var i="object"==typeof exports?e(require("@tsparticles/engine"),require("@tsparticles/fractal-noise")):e(t.window,t.window);for(var s in i)("object"==typeof exports?exports:t)[s]=i[s]}}(this,((t,e)=>(()=>{var i={303:e=>{e.exports=t},689:t=>{t.exports=e}},s={};function o(t){var e=s[t];if(void 0!==e)return e.exports;var n=s[t]={exports:{}};return i[t](n,n.exports,o),n.exports}o.d=(t,e)=>{for(var i in e)o.o(e,i)&&!o.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var n={};o.r(n),o.d(n,{fractalNoisePathName:()=>f,loadFractalNoisePath:()=>c});var r=o(303),a=o(689);const h={size:20,increment:.004,columns:0,rows:0,layers:0,width:0,height:0,offset:{x:4e4,y:4e4,z:4e4}};class l{constructor(){this._fractal=new a.FractalNoise,this.field=[],this.noiseW=0,this.options=(0,r.deepExtend)({},h)}generate(t){const e=t.getPosition(),i=Math.max(Math.floor(e.x/this.options.size),0),s=Math.max(Math.floor(e.y/this.options.size),0),o=Math.max(Math.floor(e.z/this.options.size),0),n=r.Vector.origin;return this.field?.[i]?.[s]?.[o]?(n.setTo(this.field[i][s][o]),n):n}init(t){this.container=t,this._setup()}reset(){}update(){this.container&&(this._calculateField(),this.noiseW+=this.options.increment)}_calculateField(){const t=this.options;for(let e=0;e<t.columns;e++)for(let i=0;i<t.rows;i++)for(let s=0;s<t.layers;s++)this.field[e][i][s].angle=this._fractal.noise4d(e/50,i/50,s/50,this.noiseW)*Math.PI*2,this.field[e][i][s].length=this._fractal.noise4d(e/100+t.offset.x,i/100+t.offset.y,s/100+t.offset.z,this.noiseW)}_initField(){this.field=new Array(this.options.columns);for(let t=0;t<this.options.columns;t++){this.field[t]=new Array(this.options.rows);for(let e=0;e<this.options.rows;e++){this.field[t][e]=new Array(this.options.layers);for(let i=0;i<this.options.layers;i++)this.field[t][e][i]=r.Vector.origin}}}_resetField(){const t=this.container;if(!t)return;const e=t.actualOptions.particles.move.path.options;this.options.size=e.size>0?e.size:h.size,this.options.increment=e.increment>0?e.increment:h.increment,this.options.width=t.canvas.size.width,this.options.height=t.canvas.size.height;const i=e.offset;this.options.offset.x=i?.x??h.offset.x,this.options.offset.y=i?.y??h.offset.y,this.options.offset.z=i?.z??h.offset.z,this.options.seed=e.seed,this._fractal.seed(this.options.seed??(0,r.getRandom)()),this.options.columns=Math.floor(this.options.width/this.options.size)+1,this.options.rows=Math.floor(this.options.height/this.options.size)+1,this.options.layers=Math.floor(t.zLayers/this.options.size)+1,this._initField()}_setup(){this.noiseW=0,this._resetField(),addEventListener("resize",(()=>this._resetField()))}}const f="fractalNoise";async function c(t,e=!0){t.checkVersion("3.9.1"),await t.addPathGenerator(f,new l,e)}return n})()));